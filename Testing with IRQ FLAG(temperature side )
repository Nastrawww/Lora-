#include <Wire.h>
#include <SPI.h>
#include <LoRa.h>
#include <OneWire.h>
#include <DallasTemperature.h>
#define ONE_WIRE_BUS 3
OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);
float Celcius = 0; 
float Fahrenheit = 0;
#define ss 10        //NSS IS CHIP SELECT PIN
#define rst 9
#define dio0 2
const int irqPin =3;
String outgoing;
byte msgCount = 0;            // count of outgoing messages
byte localAddress = 0xCC;     // address of this device
byte destination = 0xBB;      // destination to send to
long lastSendTime = 0;        // last send time
int interval = 200;          // interval between sends
void setup()
{
  Serial.begin(9600);
  sensors.begin();
  while (!Serial);
  Serial.println("LoRa Two Way Communication");
  LoRa.setPins(ss, rst, irqPin);
  if (!LoRa.begin(433E6)) {
    Serial.println("Starting LoRa failed!");
    delay(100);
    while (true);
  }
  LoRa.setSpreadingFactor(7);
}

void loop()
{ 
  
  onReceive(LoRa.parsePacket());        
  delay(2000);       
}
void LoRa_rxMode()
{
  LoRa.enableInvertIQ();
  LoRa.receive();
}
void LoRa_txMode()
{
  LoRa.idle();
  LoRa.disableInvertIQ();
}
void sendMessage(String outgoing ) {
  LoRa_txMode();
  LoRa.beginPacket();                   // start packet
  LoRa.write(destination);              // add destination address
  LoRa.write(localAddress);             // add sender address
  LoRa.write(msgCount);                 // add message ID
  LoRa.write(outgoing.length());        // add payload length
  LoRa.print(outgoing);                 // add payload
  LoRa.endPacket();                     // finish packet and send it
  msgCount++;                           // increment message ID
}
void onReceive(int packetSize) {
  LoRa_rxMode();
  if (packetSize == 0)
  {
    //Serial.println("nOTHING RECEIVED");
    return;
  }

  // read packet header bytes:
  int recipient = LoRa.read();          // recipient address
  byte sender = LoRa.read();            // sender address
  byte incomingMsgId = LoRa.read();     // incoming msg ID
  byte incomingLength = LoRa.read();    // incoming msg length
  String incoming = "";
   while (LoRa.available()) {
    incoming+= (char)LoRa.read();
  }
  Serial.print("Incoming:");
  Serial.println(incoming);
 
    // received a packet
  //Serial.print("Received packet:  ");
 // String LoRaData = LoRa.readString();
  //Serial.print(LoRaData);
  // read packet
 
  // print RSSI of packet
  Serial.print("  with RSSI ");
  Serial.println(LoRa.packetRssi());
  Serial.println();
  myTemp();
  
}
void myTemp()
{
  sensors.requestTemperatures();
  Celcius= sensors.getTempCByIndex(0);
  Serial.println(Celcius);
  if(isnan(Celcius))
  {
    String message= "Not working...";
    
    sendMessage(message);
  }
  if (Celcius <= 40)
  {
    Celcius = sensors.getTempCByIndex(0);
    String message =String(Celcius);
    sendMessage(message);
  }
  if ( Celcius > 40 )
  {
    String message = "Warning..";
    sendMessage(message);
  }

}
